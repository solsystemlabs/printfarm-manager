name: CI

on:
  pull_request:
    branches:
      - master
      - production
  push:
    branches:
      - master
      - production

jobs:
  validate:
    name: Lint, Type Check, Test, and Build
    runs-on: ubuntu-latest

    # PostgreSQL service for database tests
    # Note: Credentials are safe here - this is an ephemeral test database
    # that exists only during CI runs and is not accessible externally
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres # ggignore: temporary test database
          POSTGRES_DB: printfarm_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      # ggignore: ephemeral CI test database, not production credentials
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/printfarm_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma clients
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run tests
        run: npm run test:run

      - name: Build application
        run: npm run build
        env:
          # Use staging environment for CI builds
          CLOUDFLARE_ENV: staging

      - name: Check formatting
        run: npm run format:check
